---
swagger: "2.0"
info:
  version: "1"
  title: "Test Multiple ApiSources With Different Names 2"
  description: "Only Store Resource"
tags:
- name: "store"
schemes:
- "http"
- "https"
paths:
  /store/order:
    post:
      tags:
      - "store"
      summary: "Place an order for a pet"
      description: ""
      operationId: "placeOrder"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "order placed for purchasing the pet"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid Order"
  /store/order/{orderId}:
    get:
      tags:
      - "store"
      summary: "Find purchase order by ID"
      description: "For valid response try integer IDs with value <= 5 or > 10. Other\
        \ values will generated exceptions"
      operationId: "getOrderById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of pet that needs to be fetched"
        required: true
        type: "string"
        maximum: 5
        minimum: 1
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
    delete:
      tags:
      - "store"
      summary: "Delete purchase order by ID"
      description: "For valid response try integer IDs with value < 1000. Anything\
        \ above 1000 or nonintegers will generate API errors"
      operationId: "deleteOrder"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of the order that needs to be deleted"
        required: true
        type: "string"
        minimum: 1
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
  /store/orders/{orderIds}:
    get:
      tags:
      - "store"
      summary: "Find multiple purchase orders by IDs"
      description: "For valid response try integer IDs with value <= 5 or > 10. Other\
        \ values will generated exceptions"
      operationId: "getOrdersById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "orderIds"
        in: "path"
        description: "IDs of pets that needs to be fetched"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
  /store/pingGet:
    get:
      tags:
      - "store"
      summary: "Simple ping endpoint"
      description: ""
      operationId: "pingGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "Successful request - see response for 'pong'"
          schema:
            type: "string"
  /store/pingPost:
    post:
      tags:
      - "store"
      summary: "Simple ping endpoint"
      description: ""
      operationId: "pingPost"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "Successful request - see response for 'pong'"
          schema:
            type: "string"
  /store/pingPut:
    put:
      tags:
      - "store"
      summary: "Simple ping endpoint"
      description: ""
      operationId: "pingPut"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "Successful request - see response for 'pong'"
          schema:
            type: "string"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
      optionalStatus:
        type: "string"
      internalThing:
        type: "string"
      anotherInternalThing:
        type: "string"
    xml:
      name: "Order"
